** Sintaxis de CSS

Selector: elemento al que vamos a aplicar estilos.
Propiedad: lo que vamos a cambiar.
Valor: nuevo valor que le vamos a dar a la propiedad.
Propuedad: valor. Se le denomina declaracion al conjunto de selector + declaracion(es) se le denomina regla.


--------------------------------------------------------------------------------------------------------------------------------

 ** Selectores

    Selectores simples:
        Selectores elementales:
            Selector universal -> *
            Selector de tipo o etiqueta -> nombre de la etiqueta.

        Selectores de atributo.
            id -> id del elemento. (# para los id).
            clase -> clase del elemento. (Para seleccionar clase es .nombredelaclase)
            otros atributos. Para los atributos seria con corchetes []
            [atributo] -> un atributo.
            [atributo = valor] -> elementos que tengan ese valor.
            [atributo^=valor] -> elementos que empiezan con ese valor.
            [atributo*=valor] -> elementos que tengan el valor, sin importar el orden.
            [atributo$=valor] -> elementos que terminan con ese valor.
            [atributo|=valor] 
    
    Selectores compuestos
        Selectores agrupados.
            Se agrupan los selectores separados por comas y se escribe el estilo una sola vez.

        Selectores combinadores.
            Selector descendiente. 
            Selector de hermanos siguientes (+). -> Son los elementos que estan en el mismo nivel.
            Selector de hermanos siguientes. ~

            Para seleccionar un hijo directo se pone:

            .nombredelaclase > nombredelaetiqueta/clase/id.

        Pseudoclases - pseudoelementos.

--------------------------------------------------------------------------------------------------------------------------------

** Especificidad

    Establece como de especifico es un selector ara saber que estilo aplicar. 
    El calculo se realiza con la siguiente formula:
        Etiquetas y pseudoelementos 001
        Clases, atributos y pseudoclases 010
        Ids 100
        Estilos en linea 1000
        !important GANA A TODO Y NO SE USA.

    Cascada -> Funciona siempre que la especificidad sobre el elemento sea la misma.

    Herencia -> es la capacidad que tienen algunos elementos de heredar algunas propiedades de sus elementos conetenedores (padre, abuelos, etc).

    La palabra "inherit" sirve para forzar a esos elementos que no se puedan heredar, pero queramos que hereden en un caso especifico. Como en el caso de los links.

    Para ignorar los cambios, en la herencia, se utiliza "initial". Asi lo ignora y permanece con su valor inicial.

--------------------------------------------------------------------------------------------------------------------------------

Prefijos propietarios

Autoprefixer ( autoprefixer.github.io )
    Sirve para los prefijos de los navegadores que no soportan un estandar.


--------------------------------------------------------------------------------------------------------------------------------

Medidas. 

* Width, Height

*** Los elementos en linea no tienen medida. No sirve usar width o height.

*** Solo se le puede dar medida a los elementos de bloque.

* Margin:
    Es la propiedad que nos permite generar espacio entre elementos.
    Es un shorthand (propiedad abreviada) que controla los 4 lados posibles a los que dar margenes.

    * margin-top: margen superior
    * margin-right: margen derecho
    * margin-bottom: margen inferior
    * margin-left: margen izquierdo

    Admite hasta 4 valores que van en el orden de las agujas del reloj.

    4 valores -> margin:top right bottom left
    3 valores -> margin:top left/right bottom
    2 valores -> margin:top left/right
    1 valor -> margin:top/right/bottom/left

En el caso de los elementos de linea, solo tienen disponible solo los margenes horizontales (left/right). Los de bloque tienen los 4 disponibles.

Para los elementos de bloque, en caso que se quiera utilizar el valor "auto" en los margin, se debe declarar el tama単o del bloque, para que surta efecto.

Los valores que se pueden utilizar en los margenes son los:

    Pixeles (px)
    auto (automatico)

Se recomienda poner margin: 0; en el body, para que asi se reinicie el margin por defecto, que es 8, de los navegadores.

* Padding
    Es la propuedad que nos permite generar espacio interno entre el borde y la caja. 
    Es un shorthand (propiedad abreviada) que controla los 4 lados posibles a los que dar padding.

    * padding-top: margen superior
    * padding-right: margen derecho
    * padding-bottom: margen inferior
    * padding-left: margen izquierdo

    Admite hasta 4 valores que van en el orden de las agujas del reloj.

    4 valores -> padding:top right bottom left
    3 valores -> padding:top left/right bottom
    2 valores -> padding:top left/right
    1 valor -> padding:top/right/bottom/left

Si el objetivo es separar la caja de todos los elementos que lo rodean, se usa margin, si se quiere separar aumentar el tama単o de esta caja es padding.

* Border
    Es la propiedad que nos permite modificar el borde de la caja.
    Es un shorthand (propiedad abreviada) que agrupa 3 propiedades.

        * border-width: ancho del borde

            ** border-top-width
            ** border-right-width
            ** border-bottom-width
            ** border-left-width

        * border-style: estilo del borde

            ** border-top-style
            ** border-right-style
            ** border-bottom-style
            ** border-left-style
            Listado de valores para style:

                - none
                - hidden
                - dotted
                - dashed
                - solid
                - double
                - groove
                - ridge
                - inset
                - outset 

        * border-color: color del borde

            ** border-top-color
            ** border-right-color
            ** border-bottom-color
            ** border-left-color

--------------------------------------------------------------------------------------------------------------------------------

** Box sizing
    Es la propiedad que nos permite controlar el calculo que hace el navegador a la hora de modificar que hace el navegador a la hora de modificar las propiedades content, padding y border.
    
    Los 2 valores que podemos darle son:
        content-box -> valor por defecto.
        border-box -> calculo de tama単o del elemento incluyendo el padding y el border.

--------------------------------------------------------------------------------------------------------------------------------

** Border radius: es la propiedad que nos permite redondear vertices de forma independiente.

Es un shorthand que engloba 4 propiedades:

    * border-top-left-radius -> radio del borde superior izquierdo.
    * border-top-right-radius -> radio del borde superior derecho.
    * border-bottom-right-radius -> radio del borde inferior derecho.
    * border-bottom-left-radius -> radio del borde inferior izquierdo.

Si solo recibe un valor, va a dibujar un circulo con ese radio.

** Border radius eliptico. Es igual que el radius, pero para separar los ejes de la elipse se coloca /
el primer valor es x y el segundo y, quedando asi: x / y

 --------------------------------------------------------------------------------------------------------------------------------

** Overflow
    Es la propiedad que controla que debe hacer la caja cuando su contenido se desborda del contenedor.

    Es un shorthand que engloba overflow-x y overflow-y. 

    Tiene cuatro posibles valores:

        * visible -> es el valor por defecto.
        * hidden -> el contenido que se desborde no se vera. Si aplicamos esta propuedad en un solo eje, el otro se pondra automaticamente en el valor scroll.
        * scroll-> apareceran barras de scroll en el  eje asignado. (x, y o ambos)
        * auto -> apareceran barras de scroll en el caso de que hicieran falta.

Overflow tambien ayuda a los dise単os, no solo a arreglar los parrafos.

--------------------------------------------------------------------------------------------------------------------------------

Los margenes verticales se colapsan. No hay trucos para solucionar este problema. Aunque lo que se recomienda es dar margin bottom a los elementos, en vez de darle margin top.

Las formas de solucionar las colisiones entre padres e hijos es utilizar, EN EL PADRE, los siguientes atributos con los siguientes valores:

    - overflow: hidden;
    - padding-top: 0.1px; No importa el valor.
    - border-top: 0.1px; No importa el valor.

--------------------------------------------------------------------------------------------------------------------------------

** Display

    Esta propiedad nos sirve para cambiar el contexto de los elementos dentro del navegador.

    Admite varios valores

        * none -> hace que el elemento no se muestre, pero si sigue cargandose.
        * block -> hace que el elemento sea de bloque
        * inline -> hace que el elemento sea de linea
        * inline-block -> hace que el elemento sea de linea pero admite medidas y margenes verticales.

--------------------------------------------------------------------------------------------------------------------------------

** Outline

    Es la propiedad que nos permite dibujar un borde por fuera del modelo de la caja.

    Es un shorthand que engloba:

        * outline-width -> controla el ancho del outline.
        * outline-style -> controla el estilo del outline.
        * outline-color -> controla el color del outline.

    Tiene las mismas propiedades y sintaxis que border, pero con algunas diferencias.

         - No ocupa sitio, ya que no forma parte del box-model.
        - No se puede redondear.
        - No se puede controlar los lados de forma independiente.
    
    Tambien cuenta con la propiedad outline-offset, que nos permite aumentar o disminuir la distancia del outline con respecto a la caja que pertenece.
    
--------------------------------------------------------------------------------------------------------------------------------

** Text align 
    Es la propiedad que nos permite alinear horizontalmente el contenido de un elemento de bloque siempre que el contenido no tenga ancho declarado.

        * text-align: left; -> alinea el contenido a la izquierda.
        * text-align: right; -> alinea el contenido a la derecha.
        * text-align: center; -> alinea el contenido al centro.
        * text-align: justify; -> alinea el contenido de forma justificada. NO ES RECOMENDABLE USARLO.

    El text-align solo centra el contenido. No centra elementos de linea.

    --------------------------------------------------------------------------------------------------------------------------------

    ** Box shadow
        Se a単adio para crear la sombra a los efectos de nuestra caja.

        En esencia lo que hace es crear un clon de la caja respetando la forma de su box-model (ancho, alto, redondez)

        La sintaxis de box-shadow se puede escribir de distintas formas segun lo que queramos conseguir.

        Los valores que le podemos poner son:
            offset-x -> desplazamiento en x (obligatorio).
            offset-y -> desplazamiento en y (obligatorio).
            blur-radius -> desenfoque de la sombra.
            spread-radius -> expansion de la sombra.
            color -> el color de la sombra, si no lo especificamos lo heredara del elemento al que pertenece.
            inset -> determina si la sombra sera interior o exterior.